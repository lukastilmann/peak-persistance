% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sim_data.R
\name{generate_functional_curves}
\alias{generate_functional_curves}
\title{Generate Functional Curves Based on a Benchmark Function}
\usage{
generate_functional_curves(
  g,
  n = 50,
  num_points = 100,
  warping = "simple",
  warping_gamma = 0,
  warping_points = 5,
  sigma_amplitude = 0.01,
  scale_factor = 0.01,
  nugget = 0.01,
  noise_to_signal = 0.01,
  seed = NULL
)
}
\arguments{
\item{g}{Function. Base function to be warped and perturbed.}

\item{n}{Integer. Number of curves to generate. Default is 50.}

\item{num_points}{Integer. Number of points in the grid for each curve. Default is 100.}

\item{warping}{Character. Type of warping: "simple" for polynomial warping or
"flexible" for more complex warping. Default is "simple".}

\item{warping_gamma}{Numeric. Controls the variability when using flexible warping.
Higher values increase variability. Default is 0.}

\item{warping_points}{Integer. Number of internal points for flexible warping.
Default is 5.}

\item{sigma_amplitude}{Numeric. Standard deviation of amplitude variation.
Default is 0.01.}

\item{scale_factor}{Numeric. Scale factor for warping (not currently used).
Default is 0.01.}

\item{nugget}{Numeric. Base noise level (not currently used). Default is 0.01.}

\item{noise_to_signal}{Numeric. Ratio of noise variance to signal variance.
Default is 0.01.}

\item{seed}{Integer or NULL. Random seed for reproducibility. Default is NULL.}
}
\value{
A list containing:
\item{curves}{Matrix of generated functional curves.}
\item{t_grid}{Vector of grid points (0 to 1).}
\item{base_function}{The base function used.}
\item{amplitude_params}{Vector of amplitude parameters for each curve.}
\item{grid_warped}{Matrix of warped grid points.}
\item{noise_grid}{Matrix of noise added to each curve.}
}
\description{
Creates a set of functional curves by applying amplitude variations, time
warping, and random noise to a base function. This can be used to generate
synthetic functional data for testing and simulation purposes.
}
\examples{
# Create a simple benchmark function
base_fn <- generate_benchmark_function(
  bases = list(2, "sine"),
  coefficients = c(1, 0.5),
  shifts = c(0.5, 0),
  scale_factors = c(1, 6.28)
)

# Generate 20 curves with simple warping
curves_data <- generate_functional_curves(
  n = 20,
  num_points = 100,
  g = base_fn,
  warping = "simple",
  sigma_amplitude = 0.05,
  noise_to_signal = 0.02,
  seed = 123
)

# Plot the first 5 curves
plot(curves_data$curves, curves_data$t_grid)
}

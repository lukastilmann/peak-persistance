% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sim_data.R
\name{generate_benchmark_function}
\alias{generate_benchmark_function}
\title{Generate a Flexible Mathematical Benchmark Function}
\usage{
generate_benchmark_function(
  bases,
  coefficients,
  shifts = NULL,
  scale_factors = NULL
)
}
\arguments{
\item{bases}{List of basis function types. Use numeric values for polynomial
powers (e.g., 1 for linear, 2 for quadratic), "normal" for normal
density, or "sine" for sine function.}

\item{coefficients}{Numeric vector or list of coefficients for each basis function.}

\item{shifts}{Numeric vector or list of horizontal shifts for each basis function.
Defaults to 0 for each basis if NULL.}

\item{scale_factors}{Numeric vector or list of scaling factors for each basis function.
Defaults to 1 for each basis if NULL.}
}
\value{
A function that takes a numeric input and returns the combined value
of all basis functions.

A function that takes a numeric input and returns the combined value
of all basis functions.
}
\description{
Creates a function by combining multiple basis functions with coefficients,
shifts, and scale factors. Supported basis types include polynomial functions
(specified by numeric power), normal density functions, and sine functions.
}
\examples{
# Create a function with quadratic and sine components
f <- generate_benchmark_function(
  bases = list(2, "sine"),
  coefficients = c(1.5, 2),
  shifts = c(0, pi/4),
  scale_factors = c(1, 2)
)

# Evaluate at points
x <- seq(-2, 2, by = 0.1)
y <- f(x)
plot(x, y, type = "l")
# Create a function with quadratic and sine components
f <- generate_benchmark_function(
  bases = list(2, "sine"),
  coefficients = c(1.5, 2),
  shifts = c(0, pi/4),
  scale_factors = c(1, 2)
)

# Evaluate at points
x <- seq(-2, 2, by = 0.1)
y <- f(x)
plot(x, y, type = "l")
}

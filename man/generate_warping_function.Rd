% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sim_data.R
\name{generate_warping_function}
\alias{generate_warping_function}
\title{Generate a Boundary-Preserving Warping Function}
\usage{
generate_warping_function(n_points = 5, gamma = 0, seed = NULL)
}
\arguments{
\item{n_points}{Integer. Number of internal points to sample within (0,1).
More points allow for more complex warping. Default is 5.}

\item{gamma}{Numeric. Controls the variability of the warping function.
Higher values increase variability. Default is 0.}

\item{seed}{Integer or NULL. Random seed for reproducibility. Default is NULL.}
}
\value{
A function that takes numeric input(s) in \verb{[0,1]} and returns warped values
in \verb{[0,1]}.
}
\description{
Creates a monotone increasing function that maps \verb{[0,1]} to \verb{[0,1]}, preserving the
endpoints. The function is built by sampling points within the unit interval and
creating a monotone cubic spline interpolation between them.
}
\examples{
# Create a warping function with default parameters
warp_fn <- generate_warping_function(seed = 123)

# Plot the warping function
x <- seq(0, 1, by = 0.01)
y <- warp_fn(x)
plot(x, y, type = "l", main = "Warping Function",
     xlab = "Original", ylab = "Warped")
abline(0, 1, lty = 2)  # Add identity line for reference
}
